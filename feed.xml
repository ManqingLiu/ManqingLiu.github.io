<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://manqingliu.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://manqingliu.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-01-04T03:20:48+00:00</updated><id>https://manqingliu.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">The bitter lesson I learnt from my first PhD project</title><link href="https://manqingliu.github.io/blog/2025/my-first-blog/" rel="alternate" type="text/html" title="The bitter lesson I learnt from my first PhD project"/><published>2025-01-03T00:00:00+00:00</published><updated>2025-01-03T00:00:00+00:00</updated><id>https://manqingliu.github.io/blog/2025/my-first-blog</id><content type="html" xml:base="https://manqingliu.github.io/blog/2025/my-first-blog/"><![CDATA[<p>I recently completed my first PhD project and I must say it was a bittersweet experience. I learnt a lot from the project, but I also made a lot of mistakes. In this post, I will share the bitter lesson I learnt from my first PhD project.</p> <p>A disclaimer: I am not an expert in this field, but I am sharing my experience in the hope that it will help others avoid the mistakes I made, especially those who, like me, don’t come from a traditional computer science background.</p> <h2 id="the-bitter-lesson-1-start-with-an-existing-repository-if-you-can-find-one-and-build-on-it">The bitter lesson 1: Start with an existing repository if you can find one and build on it</h2> <p>When I began my first PhD project, I decided to build everything from scratch, thinking it would give me a deeper understanding and more control over the project. At that time, I am also very new to programming in <code class="language-plaintext highlighter-rouge">python</code> and have a deep-rooted fear of using or changing other people’s code.</p> <p>This turned out to be a significant mistake that cost me valuable time and energy. In retrospect, I should have searched for existing repositories or codebases related to my research topic.</p> <p>There are several reasons why this approach would have been more beneficial:</p> <ol> <li> <p><strong>Time efficiency</strong>: Starting from an existing codebase would have saved me months of work in setting up basic infrastructures and implementing standard algorithms.</p> </li> <li> <p><strong>Learning from others</strong>: By examining and building upon existing code, I could have learned best practices and coding standards specific to my field.</p> </li> <li> <p><strong>Focusing on novel contributions</strong>: Instead of reinventing the wheel, I could have devoted more time to developing and implementing my unique ideas and contributions.</p> </li> <li> <p><strong>Reduced errors</strong>: Established codebases often have fewer bugs and have been tested more thoroughly than something built from scratch.</p> </li> <li> <p><strong>Better documentation</strong>: Many existing repositories come with comprehensive documentation, which can be invaluable for understanding complex algorithms or data structures.</p> </li> </ol> <p>Of course, this doesn’t mean you should never build from scratch. There are times when it’s necessary or beneficial to do so. However, for most PhD projects, especially in the early stages, leveraging existing work can significantly accelerate your progress and allow you to focus on your unique contributions to the field.</p> <h2 id="the-bitter-lesson-2-check-public-datasets-first-before-simulating-your-own-data">The bitter lesson 2: Check public datasets first before simulating your own data</h2> <h2 id="the-bitter-lesson-3-dont-be-afraid-to-ask-for-help">The bitter lesson 3: Don’t be afraid to ask for help</h2> <h2 id="the-bitter-lesson-4-dont-be-afraid-to-change-the-codes-provided-by-your-advisor">The bitter lesson 4: Don’t be afraid to change the codes provided by your advisor</h2> <h2 id="the-bitter-lesson-5-keep-a-daily-log-of-your-experiments">The bitter lesson 5: Keep a daily log of your experiments</h2> <h2 id="the-bitter-lesson-6-instead-of-topdown-approach-start-with-the-simplest-model-first">The bitter lesson 6: Instead of topdown approach, start with the simplest model first</h2>]]></content><author><name></name></author><category term="blog-posts"/><category term="reflections"/><summary type="html"><![CDATA[A post about the lessons learnt from working on my first PhD project.]]></summary></entry></feed>